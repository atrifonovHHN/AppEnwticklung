name: Build, Test, and Create Docker Container

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: |
          # Build the Docker image with a specific tag (e.g., my-app:latest)
          docker build -t my-app:latest .

      - name: Run Docker Container
        run: |
          # Start the Docker container based on the built image
          docker run -d --name my-app-container -p 8080:8080 my-app:latest
          sleep 10

      - name: Perform Health Check
        run: |
          # Check if the application is running
          curl --fail http://localhost:8080/health || exit 1

      - name: Get Dataset
        run: |
          # Retrieve the dataset for testing
          curl --fail http://localhost:8080/v1/dataset -o dataset.json || exit 1

      - name: Calculate Results
        run: |
          # Prepare a mock results file for testing the API
          echo '{
            "result": [
              {
                "customerId": "5bd2d637-c946-45bf-b194-d197da7da5cb",
                "consumption": 2873559000
              }
            ]
          }' > results.json

      - name: Attempt POST Request
        run: |
          # Try sending a POST request and save the response or the error
          curl -X POST -H "Content-Type: application/json" -d @results.json http://localhost:8080/v1/result -o post_response.txt || true

      - name: Run Gradle Tests
        working-directory: Leistungsnachweis
        run: |
          chmod +x gradlew  # Ensure gradlew is executable
          ./gradlew test

      - name: Stop and Remove Docker Container
        run: |
          # Clean up the Docker container after the tests
          docker stop my-app-container
          docker rm my-app-container
